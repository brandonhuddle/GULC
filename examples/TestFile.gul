trait TContractTest {

}

struct ContractTestImpl : TContractTest {

}

struct Example<G>
where G : TContractTest {

}

// For this to work we will need to support using `where` to modify the abilities for `G`
// (i.e. store `TContractTest` as an inherited type within `G`)
struct HardTest<G> : Example<G>
where G : TContractTest {

}

func _start() -> Example<ContractTestImpl> {

}
