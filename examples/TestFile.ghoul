//enum TestEnum {
//    case Val1 = 23
//    case Val2 = 4
//    case Val = 5454
//}

@copy
struct vec3 {
    var x: i32
    var y: i32
    var z: i32

    init() {
        self.x = 0
        self.y = 0
        self.z = 0
    }

    init copy(_ other: ref Self) {
        self.x = other.x
        self.y = other.y
        self.z = other.z
    }

    init move(_ other: ref mut Self) {
        self.x = other.x
        self.y = other.y
        self.z = other.z

        // These are unneeded but I'm including them just for filler
        other.x = 0
        other.y = 0
        other.z = 0
    }

    init(x: i32, y: i32, z: i32) {
        self.x = x
        self.y = y
        self.z = z
    }
}

//struct TemplateTest<T> {
//    init() {
//
//    }
//}

//func manglerTest(arg param: i32) -> i32 {
//    return param
//}

//func boolTest() -> bool {
//    return true
//}

func main() -> i32 {
    let testVec = vec3(x: 0, y: 12, z: 44)
//    let templateTest = TemplateTest<i32>()
//    let testFloat: f32 = 12.0
    let testInt: i32 = 44

    let testRef = ref testInt

    if testInt == testRef {
        return 12
    } else {
        return 90
    }
}
