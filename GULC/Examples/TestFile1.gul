import std;

struct TestStruct
{
    int hm2;
    float hm;

    TestStruct()
    {
        this.hm2 = 90;
        this.hm = 0;
    }

    TestStruct(int hm2, float hm)
    {
        this.hm2 = hm2;
        this.hm = hm;
    }

    int memberFunctionTest(int param1)
    {
        return param1 + 20;
    }

    ~TestStruct()
    {
        hm2 = 0;
        hm = 0;
    }
}

int getMemberFunctionTest(TestStruct& ts)
{
    return ts.hm2;
}

int main()
{
    int i = 40;

    for (TestStruct t(i, 0); i < 54; ++i)
    {
        TestStruct hmm(69, 1);

        if (i == 52)
        {
            i = 12;
            return getMemberFunctionTest(hmm);
        }
    }

    testLabel:
    int j = 12;

    return i;
}
